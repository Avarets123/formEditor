version: '3.5'

services:
  db_app:
   container_name: db_app
   image: postgres:14.3-alpine
   restart: unless-stopped
   environment:
    - POSTGRES_USER=${POSTGRES_USER}
    - POSTGRES_DB=${POSTGRES_DB}
    - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
   ports:
    - ${POSTGRES_PORT}:${POSTGRES_PORT}
   volumes:
    #  - db_data:/var/lib/postgresql/data
     - ./store:/var/lib/postgresql/data


  data_backend:
    container_name: data_backend
    build: ./data/backend
    command: npm run start
    restart: unless-stopped
    environment:
      - POSTGRES_HOST=db_app
    depends_on: 
      - db_app
    ports:
      - ${DATA_BACKEND_PORT}:${DATA_BACKEND_PORT}

  data_frontend:
    container_name: data_frontend
    build: ./data/frontend
    command: serve -s build -l ${DATA_FRONTEND_PORT}
    restart: unless-stopped
    depends_on:
      - data_backend
      - db_app
    ports:
      - ${DATA_FRONTEND_PORT}:${DATA_FRONTEND_PORT}

  site_frontend:
    container_name: site_frontend
    build: ./site/frontend
    command: serve -s build -l ${SITE_FRONTEND_PORT}
    restart: unless-stopped
    depends_on:
      - db_app
      - data_backend
      - data_frontend
      - site_backend
    ports:
      - ${SITE_FRONTEND_PORT}:${SITE_FRONTEND_PORT}
    
  site_backend:
    container_name: site_backend
    build: ./site/backend
    command: npm run start
    restart: unless-stopped
    depends_on:
      - db_app
      - data_backend
      - data_frontend
    ports:
      - ${SITE_BACKEND_PORT}:${SITE_BACKEND_PORT}
# volumes:
#   db_data: